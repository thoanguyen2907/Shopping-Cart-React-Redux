{"ast":null,"code":"var _jsxFileName = \"/Users/thoanguyen/Downloads/react-training/React Zendvn/Chapter 4/cart practice 4/my-app/src/components/CartItem.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Helpers from './../libs/Helpers';\nimport * as configs from './../constants/Config';\nimport Validate from './../libs/Validate';\nimport { actRemoveProduct, actChangeNotify, actUpdateProduct } from './../actions/index';\n\nclass CartItem extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: 0\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.onDelete = this.onDelete.bind(this);\n    this.handleEdit = this.handleEdit.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({\n      value: event.target.value\n    });\n  }\n\n  onDelete(id) {\n    this.props.onDelete(id);\n  }\n\n  handleEdit(product, quantity) {\n    if (Validate.checkQuantity(quantity) === false) {\n      this.props.changeNotify(configs.NOTI_GREATER_THAN_ONE);\n    } else {\n      this.props.handleEdit(product, +quantity);\n      this.props.changeNotify(configs.NOTI_ACT_UPDATE);\n    }\n  }\n\n  render() {\n    let {\n      item,\n      index\n    } = this.props;\n    let {\n      product\n    } = item;\n    let quantity = this.state.value !== 0 ? this.state.value : item.quantity;\n    return React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      scope: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, index + 1), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, product.name), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, product.price), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      name: \"value\",\n      value: quantity,\n      onChange: this.handleChange,\n      type: \"number\",\n      min: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    })), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, this.showSubTotal(product.price, quantity))), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      onClick: () => this.handleEdit(product, quantity),\n      className: \"label label-info update-cart-item\",\n      href: \"#\",\n      \"data-product\": true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \"Update\"), React.createElement(\"a\", {\n      onClick: () => this.onDelete(product.id),\n      className: \"label label-danger delete-cart-item\",\n      href: \"#\",\n      \"data-product\": true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"Delete\")));\n  }\n\n  showSubTotal(price, quantity) {\n    return Helpers.toCurrency(price * quantity, \"USD\", \"right\");\n  }\n\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  return {\n    onDelete: id => {\n      dispatch(actRemoveProduct(id));\n    },\n    changeNotify: content => {\n      dispatch(actChangeNotify(content));\n    },\n    handleEdit: (product, quantity) => {\n      dispatch(actUpdateProduct(product, quantity));\n    }\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(CartItem);","map":{"version":3,"sources":["/Users/thoanguyen/Downloads/react-training/React Zendvn/Chapter 4/cart practice 4/my-app/src/components/CartItem.js"],"names":["React","Component","connect","Helpers","configs","Validate","actRemoveProduct","actChangeNotify","actUpdateProduct","CartItem","constructor","props","state","value","handleChange","bind","onDelete","handleEdit","event","setState","target","id","product","quantity","checkQuantity","changeNotify","NOTI_GREATER_THAN_ONE","NOTI_ACT_UPDATE","render","item","index","name","price","showSubTotal","toCurrency","mapDispatchToProps","dispatch","ownProps","content"],"mappings":"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","sourcesContent":["import React,{Component}from 'react';\nimport {connect} from 'react-redux';\nimport Helpers from './../libs/Helpers';\nimport * as configs from './../constants/Config';\nimport Validate from './../libs/Validate';\nimport {actRemoveProduct,actChangeNotify,actUpdateProduct} from './../actions/index'; \nclass CartItem extends Component {\n  constructor(props){\n    super(props);    \n    this.state={\n      value:0\n    }\n    this.handleChange = this.handleChange.bind(this);\n    this.onDelete = this.onDelete.bind(this);\n    this.handleEdit = this.handleEdit.bind(this)\n  }\n  handleChange(event) {\n    this.setState({\n      value: event.target.value\n    });\n  }\n  onDelete(id){\n    this.props.onDelete(id)\n  }\n  handleEdit(product,quantity){\n    if(Validate.checkQuantity(quantity)===false){\n      this.props.changeNotify(configs.NOTI_GREATER_THAN_ONE)\n    } else {\n    this.props.handleEdit(product,+quantity);\n    this.props.changeNotify(configs.NOTI_ACT_UPDATE);\n    }\n  }\n  render(){\n   let {item,index} = this.props; \n   let {product} = item; \n   let quantity =(this.state.value !==0)?this.state.value : item.quantity;\n    return (\n  <tr>\n                  <th scope=\"row\">{index+1}</th>\n                  <td>{product.name}</td>\n                  <td>{product.price}</td>\n                  <td><input name=\"value\" value={quantity} onChange={this.handleChange} type=\"number\" min={1}/></td>\n                  <td><strong>{this.showSubTotal(product.price,quantity)}</strong></td>\n                  <td>\n                    <a onClick={()=>this.handleEdit(product,quantity)} className=\"label label-info update-cart-item\" href=\"#\" data-product>Update</a>\n                    <a onClick={()=>this.onDelete(product.id)} className=\"label label-danger delete-cart-item\" href=\"#\" data-product>Delete</a>\n                  </td>\n                </tr>\n)\n\n}\nshowSubTotal(price,quantity){\n  return Helpers.toCurrency(price*quantity,\"USD\",\"right\")\n}\n}\nconst mapDispatchToProps = (dispatch,ownProps) => {\n  return {\n   onDelete: (id) => {\n     dispatch(actRemoveProduct(id))\n   },\n    changeNotify: (content) =>{\n      dispatch(actChangeNotify(content))\n    },\n    handleEdit: (product,quantity) => {\n      dispatch(actUpdateProduct(product,quantity))\n    }\n  }\n}\n\nexport default connect(null,mapDispatchToProps)(CartItem);\n\n"]},"metadata":{},"sourceType":"module"}