{"ast":null,"code":"var _jsxFileName = \"/Users/thoanguyen/Downloads/react-training/React Zendvn/Chapter 4/cart practice 4/my-app/src/components/CartItem.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Helpers from './../libs/Helpers';\nimport * as configs from './../constants/Config';\nimport Validate from './../libs/Validate';\n\nclass CartItem extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: 0\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({\n      value: event.target.value\n    });\n  }\n\n  render() {\n    let {\n      item,\n      index\n    } = this.props;\n    let {\n      product\n    } = item;\n    let quantity = this.state.value !== 0 ? this.state.value : item.quantity;\n    return React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      scope: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, index + 1), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, product.name), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, product.price), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      name: \"value\",\n      value: quantity,\n      onChange: this.handleChange,\n      type: \"number\",\n      min: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    })), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, this.showSubTotal(product.price, quantity))), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      className: \"label label-info update-cart-item\",\n      href: \"#\",\n      \"data-product\": true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, \"Update\"), React.createElement(\"a\", {\n      className: \"label label-danger delete-cart-item\",\n      href: \"#\",\n      \"data-product\": true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, \"Delete\")));\n  }\n\n  showSubTotal(price, quantity) {\n    return Helpers.toCurrency(price * quantity, \"USD\", \"right\");\n  }\n\n}\n\nexport default CartItem;","map":{"version":3,"sources":["/Users/thoanguyen/Downloads/react-training/React Zendvn/Chapter 4/cart practice 4/my-app/src/components/CartItem.js"],"names":["React","Component","connect","Helpers","configs","Validate","CartItem","constructor","props","state","value","handleChange","bind","event","setState","target","render","item","index","product","quantity","name","price","showSubTotal","toCurrency"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA6B,OAA7B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAO,KAAKC,OAAZ,MAAyB,uBAAzB;AACA,OAAOC,QAAP,MAAqB,oBAArB;;AACA,MAAMC,QAAN,SAAuBL,SAAvB,CAAiC;AAC/BM,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAW;AACTC,MAAAA,KAAK,EAAC;AADG,KAAX;AAGA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACD;;AACDD,EAAAA,YAAY,CAACE,KAAD,EAAQ;AAClB,SAAKC,QAAL,CAAc;AACZJ,MAAAA,KAAK,EAAEG,KAAK,CAACE,MAAN,CAAaL;AADR,KAAd;AAGD;;AACDM,EAAAA,MAAM,GAAE;AACP,QAAI;AAACC,MAAAA,IAAD;AAAMC,MAAAA;AAAN,QAAe,KAAKV,KAAxB;AACA,QAAI;AAACW,MAAAA;AAAD,QAAYF,IAAhB;AACA,QAAIG,QAAQ,GAAG,KAAKX,KAAL,CAAWC,KAAX,KAAoB,CAArB,GAAwB,KAAKD,KAAL,CAAWC,KAAnC,GAA2CO,IAAI,CAACG,QAA9D;AACC,WACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACgB;AAAI,MAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiBF,KAAK,GAAC,CAAvB,CADhB,EAEgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKC,OAAO,CAACE,IAAb,CAFhB,EAGgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKF,OAAO,CAACG,KAAb,CAHhB,EAIgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI;AAAO,MAAA,IAAI,EAAC,OAAZ;AAAoB,MAAA,KAAK,EAAEF,QAA3B;AAAqC,MAAA,QAAQ,EAAE,KAAKT,YAApD;AAAkE,MAAA,IAAI,EAAC,QAAvE;AAAgF,MAAA,GAAG,EAAE,CAArF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAJ,CAJhB,EAKgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAS,KAAKY,YAAL,CAAkBJ,OAAO,CAACG,KAA1B,EAAgCF,QAAhC,CAAT,CAAJ,CALhB,EAMgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAG,MAAA,SAAS,EAAC,mCAAb;AAAiD,MAAA,IAAI,EAAC,GAAtD;AAA0D,0BAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE;AAAG,MAAA,SAAS,EAAC,qCAAb;AAAmD,MAAA,IAAI,EAAC,GAAxD;AAA4D,0BAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,CANhB,CADE;AAcH;;AACDG,EAAAA,YAAY,CAACD,KAAD,EAAOF,QAAP,EAAgB;AAC1B,WAAOjB,OAAO,CAACqB,UAAR,CAAmBF,KAAK,GAACF,QAAzB,EAAkC,KAAlC,EAAwC,OAAxC,CAAP;AACD;;AAlCgC;;AAqCjC,eAAed,QAAf","sourcesContent":["import React,{Component}from 'react';\nimport {connect} from 'react-redux';\nimport Helpers from './../libs/Helpers';\nimport * as configs from './../constants/Config';\nimport Validate from './../libs/Validate';\nclass CartItem extends Component {\n  constructor(props){\n    super(props);    \n    this.state={\n      value:0\n    }\n    this.handleChange = this.handleChange.bind(this)\n  }\n  handleChange(event) {\n    this.setState({\n      value: event.target.value\n    });\n  }\n  render(){\n   let {item,index} = this.props; \n   let {product} = item; \n   let quantity =(this.state.value !==0)?this.state.value : item.quantity;\n    return (\n  <tr>\n                  <th scope=\"row\">{index+1}</th>\n                  <td>{product.name}</td>\n                  <td>{product.price}</td>\n                  <td><input name=\"value\" value={quantity} onChange={this.handleChange} type=\"number\" min={1}/></td>\n                  <td><strong>{this.showSubTotal(product.price,quantity)}</strong></td>\n                  <td>\n                    <a className=\"label label-info update-cart-item\" href=\"#\" data-product>Update</a>\n                    <a className=\"label label-danger delete-cart-item\" href=\"#\" data-product>Delete</a>\n                  </td>\n                </tr>\n)\n\n}\nshowSubTotal(price,quantity){\n  return Helpers.toCurrency(price*quantity,\"USD\",\"right\")\n}\n}\n\nexport default CartItem;\n\n"]},"metadata":{},"sourceType":"module"}